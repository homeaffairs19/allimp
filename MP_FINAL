MPI


sudo apt update

sudo apt upgrade

sudo apt install -y openmpi-bin openmpi-common libopenmpi-dev

mpirun --version

sudo apt install -y python3 python3-pip
sudo apt install python3.11-venv

python3 -m venv myenv


source myenv/bin/activate

pip install mpi4py

(pip3 install --upgrade setuptools cython)

pip3 install mpi4py

python3 -m mpi4py --version

do code
nano a.py

from mpi4py import MPI

comm = MPI.COMM_WORLD
rank = comm.Get_rank()

if rank == 0:
    data = {'key1': 7, 'key2': 3.14}
else:
    data = None

# Broadcast data from process 0 to all other processes
data = comm.bcast(data, root=0)
print(f"Process {rank} received data: {data}")


 
mpirun -np 4 python3 a.py



OPENMP


sudo apt install libomp-dev

gedit s.cpp

(code)

#include <omp.h>
#include <iostream>

int main() {
    omp_set_num_threads(4);  // Set the number of threads to 4

    #pragma omp parallel
    {
        int thread_id = omp_get_thread_num();   // Get the thread ID
        int square = thread_id * thread_id;     // Calculate square of the thread ID

        std::cout << "Thread " << thread_id 
                  << " calculates square = " << square << std::endl;
    }

    return 0;
}





#include <omp.h> 
#include <iostream> 
 
using namespace std; 
 
int main() { 
    int factorial = 1; 
    int n = 5; 
 
    #pragma omp parallel for 
    for (int i = 1; i <= n; i++) { 
        #pragma omp critical 
        { 
            factorial *= i; 
        } 
    } 
 
    cout << "Factorial of " << n << " is: " << factorial << endl; 
 
    return 0; 
}






g++ -fopenmp s.cpp -o s.out

./s.out


